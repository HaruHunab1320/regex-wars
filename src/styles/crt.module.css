/* CRT Monitor Effect Styles */

.crtContainer {
  position: relative;
  width: 100%;
  height: 100vh;
  background-color: #0a0a0a;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Dark overlay to ensure readability */
.crtContainer::before {
  content: '';
  position: absolute;
  inset: 0;
  background: rgba(0, 0, 0, 0.3);
  z-index: 0;
}

/* Monitor Frame */
.monitorFrame {
  position: relative;
  width: 85%;
  max-width: 1100px;
  height: 80%;
  max-height: 800px;
  background: dimgrey;
  border-radius: 15px;
  padding: 55px 65px 75px 65px; /* Proportionally adjusted bezels */
  box-shadow: 
    0 0 0 2px #989490,
    0 0 0 4px #e8e4dc,
    0 25px 50px -12px rgba(0, 0, 0, 0.5),
    inset 0 2px 4px rgba(255, 255, 255, 0.4),
    inset 0 -2px 4px rgba(0, 0, 0, 0.2);
  z-index: 1; /* Above background overlay */
}

/* Inner frame - dark slate blue face */
.monitorFrame::before {
  content: '';
  position: absolute;
  inset: 15px;
  border-radius: 12px;
  background: linear-gradient(
    145deg,
    #3a4454 0%,
    #2c3542 50%,
    #1e2530 100%
  );
  box-shadow: 
    inset 0 2px 4px rgba(0, 0, 0, 0.5),
    inset 0 -1px 2px rgba(255, 255, 255, 0.1),
    0 1px 2px rgba(255, 255, 255, 0.2);
  z-index: 0;
}

/* Ventilation grilles */
.monitorFrame::after {
  content: '';
  position: absolute;
  bottom: 26px;
  left: 50%;
  transform: translateX(-50%);
  width: 120px;
  height: 40px;
  background-image: repeating-linear-gradient(
    90deg,
    transparent,
    transparent 3px,
    rgba(0, 0, 0, 0.2) 3px,
    rgba(0, 0, 0, 0.2) 6px
  );
  border-radius: 4px;
  opacity: 0.5;
}

/* Brand badge */
.brandBadge {
  position: absolute;
  bottom: 35px;
  left: 80px;
  padding: 4px 12px;
  background: linear-gradient(145deg, #888, #666);
  border-radius: 4px;
  font-size: 11px;
  font-family: sans-serif;
  color: #ddd;
  text-transform: uppercase;
  letter-spacing: 1px;
  box-shadow: 
    inset 0 1px 2px rgba(0, 0, 0, 0.5),
    0 1px 2px rgba(255, 255, 255, 0.3);
  z-index: 10;
}

/* Screen Container */
.screen {
  position: relative;
  width: 100%;
  height: 100%;
  background: #000;
  border-radius: 30px / 50px; /* Asymmetric border radius for CRT curve */
  overflow: hidden;
  transform-style: preserve-3d;
  transform: perspective(1200px) rotateY(0deg) rotateX(0deg);
  box-shadow: 
    inset 0 0 50px rgba(0, 0, 0, 0.5),
    inset 0 0 120px rgba(0, 0, 0, 0.3);
  z-index: 1; /* Above the dark blue face */
}

/* Screen Curvature Effect - Main curved glass */
.screenCurve {
  position: absolute;
  inset: 0;
  background: transparent;
  border-radius: inherit;
  pointer-events: none;
  z-index: 10;
}

/* Curved glass distortion overlay */
.screenCurve::before {
  content: '';
  position: absolute;
  inset: -10%;
  background: radial-gradient(
    ellipse at center,
    transparent 0%,
    transparent 45%,
    rgba(0, 0, 0, 0.1) 50%,
    rgba(0, 0, 0, 0.3) 70%,
    rgba(0, 0, 0, 0.8) 100%
  );
  border-radius: 50%;
  pointer-events: none;
}

/* Green phosphor glow in corners */
.screenCurve::after {
  content: '';
  position: absolute;
  inset: 0;
  background: 
    radial-gradient(circle at 10% 10%, rgba(0, 255, 65, 0.3) 0%, transparent 25%),
    radial-gradient(circle at 90% 10%, rgba(0, 255, 65, 0.3) 0%, transparent 25%),
    radial-gradient(circle at 10% 90%, rgba(0, 255, 65, 0.3) 0%, transparent 25%),
    radial-gradient(circle at 90% 90%, rgba(0, 255, 65, 0.3) 0%, transparent 25%);
  pointer-events: none;
  mix-blend-mode: screen;
  border-radius: inherit;
}

/* Phosphor Glow Layer */
.phosphorGlow {
  position: absolute;
  inset: 0;
  background: 
    radial-gradient(
      ellipse at center,
      rgba(0, 255, 65, 0.08) 0%,
      rgba(0, 255, 65, 0.05) 40%,
      rgba(0, 255, 65, 0.02) 60%,
      transparent 80%
    );
  mix-blend-mode: screen;
  pointer-events: none;
  z-index: 5;
  filter: blur(2px);
}

/* Glass bulge effect */
.glassBulge {
  position: absolute;
  inset: -20px;
  border-radius: inherit;
  background: radial-gradient(
    ellipse at center,
    rgba(255, 255, 255, 0.03) 0%,
    rgba(255, 255, 255, 0.01) 30%,
    transparent 70%
  );
  pointer-events: none;
  z-index: 8;
}

/* Content Area */
.screenContent {
  position: relative;
  width: 100%;
  height: 100%;
  z-index: 1;
  /* Subtle barrel distortion for authentic CRT feel */
  transform: scale(0.98);
  border-radius: 20px / 40px;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Scanlines */
.scanlines {
  position: absolute;
  inset: 0;
  background-image: 
    repeating-linear-gradient(
      0deg,
      transparent,
      transparent 1px,
      rgba(0, 0, 0, 0.3) 1px,
      rgba(0, 0, 0, 0.3) 2px
    ),
    repeating-linear-gradient(
      90deg,
      transparent,
      transparent 1px,
      rgba(0, 255, 65, 0.01) 1px,
      rgba(0, 255, 65, 0.01) 2px
    );
  background-size: 100% 2px, 2px 100%;
  pointer-events: none;
  z-index: 11;
  opacity: 0.8;
}

/* Moving Scanline */
.scanlineMoving {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;
  z-index: 12;
}

.scanlineMoving::before {
  content: '';
  position: absolute;
  top: -100%;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    transparent 0%,
    rgba(0, 255, 65, 0.03) 50%,
    transparent 100%
  );
  animation: scanlineMove 8s linear infinite;
}

@keyframes scanlineMove {
  0% { transform: translateY(-100%); }
  100% { transform: translateY(200%); }
}

/* RGB Shift / Chromatic Aberration */
.rgbShift {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 13;
}

/* Flicker Effect */
.flicker {
  animation: flicker 0.15s infinite;
}

@keyframes flicker {
  0% { opacity: 0.97; }
  50% { opacity: 1; }
  100% { opacity: 0.98; }
}

/* Static Noise */
.noise {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 14;
  opacity: 0.02;
}

.noise::before {
  content: '';
  position: absolute;
  inset: 0;
  background-image: 
    repeating-radial-gradient(
      circle at 50% 50%,
      rgba(255, 255, 255, 0.1) 0,
      rgba(0, 0, 0, 0.1) 1px
    );
  background-size: 3px 3px;
  animation: noiseAnim 0.2s steps(10) infinite;
}

@keyframes noiseAnim {
  0%, 100% { transform: translate(0, 0); }
  10% { transform: translate(-1%, -1%); }
  20% { transform: translate(1%, 1%); }
  30% { transform: translate(-1%, 1%); }
  40% { transform: translate(1%, -1%); }
  50% { transform: translate(-1%, 0); }
  60% { transform: translate(1%, 0); }
  70% { transform: translate(0, -1%); }
  80% { transform: translate(0, 1%); }
  90% { transform: translate(-1%, -1%); }
}

/* Vignette Effect */
.vignette {
  position: absolute;
  inset: 0;
  background: radial-gradient(
    ellipse at center,
    transparent 0%,
    transparent 50%,
    rgba(0, 0, 0, 0.2) 70%,
    rgba(0, 0, 0, 0.7) 100%
  );
  pointer-events: none;
  z-index: 15;
}

/* Turn On/Off Animation */
.turnOn {
  animation: turnOn 0.5s ease-out;
}

@keyframes turnOn {
  0% {
    transform: scale(1, 0.01);
    filter: brightness(30);
  }
  35% {
    transform: scale(1, 0.01);
    filter: brightness(30);
  }
  100% {
    transform: scale(1, 1);
    filter: brightness(1);
  }
}

.turnOff {
  animation: turnOff 0.5s ease-out;
}

@keyframes turnOff {
  0% {
    transform: scale(1, 1);
    filter: brightness(1);
  }
  60% {
    transform: scale(1, 0.01);
    filter: brightness(10);
  }
  100% {
    transform: scale(1, 0.01);
    filter: brightness(0);
  }
}

/* Monitor Controls */
.monitorControls {
  position: absolute;
  bottom: 28px;
  right: 80px;
  display: flex;
  align-items: center;
  gap: 15px;
  z-index: 10;
}

/* Control labels */
.controlLabel {
  position: absolute;
  bottom: -20px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 10px;
  color: #666;
  font-family: sans-serif;
  text-transform: uppercase;
  white-space: nowrap;
}

.controlKnob {
  width: 35px;
  height: 35px;
  border-radius: 50%;
  background: linear-gradient(145deg, #b8b4ac, #989490);
  box-shadow: 
    0 4px 8px rgba(0, 0, 0, 0.3),
    inset 0 -2px 4px rgba(0, 0, 0, 0.3),
    inset 0 2px 4px rgba(255, 255, 255, 0.5);
  cursor: pointer;
  transition: transform 0.2s;
  position: relative;
}

/* Knob indicator */
.controlKnob::before {
  content: '';
  position: absolute;
  top: 5px;
  left: 50%;
  transform: translateX(-50%);
  width: 3px;
  height: 10px;
  background: #666;
  border-radius: 1px;
}

.controlKnob:hover {
  transform: rotate(10deg);
}

.powerButton {
  width: 60px;
  height: 25px;
  border-radius: 3px;
  background: #666;
  position: relative;
  cursor: pointer;
  box-shadow: 
    inset 0 2px 8px rgba(0, 0, 0, 0.8),
    0 1px 2px rgba(255, 255, 255, 0.2);
  margin-right: 20px;
  overflow: hidden;
}

/* Toggle switch */
.powerButton::before {
  content: '';
  position: absolute;
  top: 2px;
  left: 2px;
  width: 28px;
  height: 21px;
  background: linear-gradient(145deg, #989490, #b8b4ac);
  border-radius: 2px;
  transition: all 0.3s ease;
  box-shadow: 
    0 1px 3px rgba(0, 0, 0, 0.5),
    inset 0 1px 2px rgba(255, 255, 255, 0.3);
}

/* OFF text */
.powerButton::after {
  content: 'OFF';
  position: absolute;
  right: 5px;
  top: 50%;
  transform: translateY(-50%);
  font-size: 8px;
  color: #333;
  font-family: sans-serif;
  font-weight: bold;
  transition: opacity 0.3s;
}

/* ON state */
.powerButton.on::before {
  left: 30px;
  background: linear-gradient(145deg, #00ff41, #00cc33);
  box-shadow: 
    0 1px 3px rgba(0, 0, 0, 0.5),
    0 0 15px rgba(0, 255, 65, 0.8),
    inset 0 1px 2px rgba(255, 255, 255, 0.3);
}

.powerButton.on::after {
  content: 'ON';
  left: 5px;
  right: auto;
  color: #00ff41;
  text-shadow: 0 0 5px rgba(0, 255, 65, 0.8);
}

/* Reflection on screen */
.reflection {
  position: absolute;
  inset: 0;
  background: linear-gradient(
    135deg,
    transparent 0%,
    rgba(255, 255, 255, 0.02) 50%,
    transparent 100%
  );
  pointer-events: none;
  z-index: 16;
}